generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Mood tracking
  moods         Mood[]
  // Chat history
  chatMessages  ChatMessage[]
  // Preferences
  preferences   Preferences?
  // Reminders
  reminders     Reminder[]
  // Sleep tracking
  sleepRecords  SleepRecord[]
}

model Mood {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  rating      Int      // Scale of 1-10
  note        String?
  activities  String[] // Activities done during this time
  createdAt   DateTime @default(now())
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
}

model ChatMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  role      String   // 'user' or 'assistant'
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
}

model Preferences {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  theme             String  @default("light")
  checkInFrequency  String  @default("daily")
  notificationsEnabled Boolean @default(true)
  userId            String  @unique @db.ObjectId
  user              User    @relation(fields: [userId], references: [id])
}

model Reminder {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  datetime    DateTime
  completed   Boolean  @default(false)
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
}

model SleepRecord {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  startTime   DateTime
  endTime     DateTime
  quality     Int      // Scale of 1-5
  notes       String?
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
}